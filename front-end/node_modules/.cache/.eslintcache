[{"/Users/asif/Desktop/project/e-dashboard/front-end/src/index.js":"1","/Users/asif/Desktop/project/e-dashboard/front-end/src/App.js":"2","/Users/asif/Desktop/project/e-dashboard/front-end/src/reportWebVitals.js":"3","/Users/asif/Desktop/project/e-dashboard/front-end/src/component/Nav.js":"4","/Users/asif/Desktop/project/e-dashboard/front-end/src/component/Footer.js":"5","/Users/asif/Desktop/project/e-dashboard/front-end/src/component/SignUp.js":"6","/Users/asif/Desktop/project/e-dashboard/front-end/src/component/PrivateComponent.js":"7","/Users/asif/Desktop/project/e-dashboard/front-end/src/component/Login.js":"8","/Users/asif/Desktop/project/e-dashboard/front-end/src/component/AddProduct.js":"9","/Users/asif/Desktop/project/e-dashboard/front-end/src/component/ProductList.js":"10","/Users/asif/Desktop/project/e-dashboard/front-end/src/component/UpdateProduct.js":"11"},{"size":324,"mtime":1671486077219,"results":"12","hashOfConfig":"13"},{"size":1227,"mtime":1672147117878,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1671480500337,"results":"15","hashOfConfig":"13"},{"size":2640,"mtime":1672008664971,"results":"16","hashOfConfig":"13"},{"size":436,"mtime":1671491191512,"results":"17","hashOfConfig":"13"},{"size":5374,"mtime":1672180244432,"results":"18","hashOfConfig":"13"},{"size":241,"mtime":1671577498233,"results":"19","hashOfConfig":"13"},{"size":4874,"mtime":1672180096057,"results":"20","hashOfConfig":"13"},{"size":4414,"mtime":1672146955168,"results":"21","hashOfConfig":"13"},{"size":3340,"mtime":1672187287227,"results":"22","hashOfConfig":"13"},{"size":4404,"mtime":1672174533659,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wkz6l",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/Users/asif/Desktop/project/e-dashboard/front-end/src/index.js",[],[],"/Users/asif/Desktop/project/e-dashboard/front-end/src/App.js",[],[],"/Users/asif/Desktop/project/e-dashboard/front-end/src/reportWebVitals.js",[],[],"/Users/asif/Desktop/project/e-dashboard/front-end/src/component/Nav.js",["59"],[],"import React from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport logo from '../assets/logo.jpg'\n\nconst Nav = () => {\n    const auth = localStorage.getItem('user');\n    const navigate = useNavigate();\n    const logout = () => {\n        localStorage.clear();\n        navigate('/signup')\n    }\n\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand-lg bg-info fixed-top\">\n                <div className=\"container-fluid\">\n                    <div className=\"collapse text-white navbar-collapse\">\n                        <a className=\"navbar-brand\">\n                            <img src={logo} width=\"30\" height=\"30\" className=\"d-inline-block rounded-circle align-top\" alt=\"logo\"/>\n                        </a>\n                        {\n                            auth ?\n                                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Products</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" href=\"/add\">Add Product</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" href=\"/update\">Update Product</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" href=\"/profile\">Profile</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" onClick={logout} href=\"/signup\">Logout ({JSON.parse(auth).name})  </a>\n                                    </li>\n                                </ul>\n                                :\n                                <ul className=\"navbar-nav ml-auto\">\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" href=\"/signup\">SignUp</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" href=\"/login\">Login</a>\n                                    </li>\n                                </ul>\n                        }\n                    </div>\n                </div>\n            </nav>\n        </div>\n    )\n}\nexport default Nav; \n","/Users/asif/Desktop/project/e-dashboard/front-end/src/component/Footer.js",[],[],"/Users/asif/Desktop/project/e-dashboard/front-end/src/component/SignUp.js",[],["60"],"/Users/asif/Desktop/project/e-dashboard/front-end/src/component/PrivateComponent.js",[],[],"/Users/asif/Desktop/project/e-dashboard/front-end/src/component/Login.js",[],["61"],"/Users/asif/Desktop/project/e-dashboard/front-end/src/component/AddProduct.js",[],[],"/Users/asif/Desktop/project/e-dashboard/front-end/src/component/ProductList.js",[],[],"/Users/asif/Desktop/project/e-dashboard/front-end/src/component/UpdateProduct.js",["62"],[],"import React, { useEffect } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\n\nconst UpdateProduct = () => {\n    const [name, setName] = React.useState('');\n    const [price, setPrice] = React.useState('');\n    const [category, setCategory] = React.useState('');\n    const [company, setCompany] = React.useState('');\n    const params = useParams();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        getProductDetails();\n    }, [])\n\n    const getProductDetails = async () => {\n        console.warn(params);\n        let result = await fetch(`http://localhost:5000/product/${params.id}`);\n        result = await result.json();\n        setName(result.name)\n        setPrice(result.price)\n        setCategory(result.category)\n        setCompany(result.company)\n    }\n\n    const updateProduct = async () => {\n        console.warn(name, price, category, company)\n        let result = await fetch(`http://localhost:5000/product/${params.id}`, {\n            method: \"put\",\n            body: JSON.stringify({ name, price, category, company }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        result = await result.json()\n        console.warn(result)\n        navigate('/')\n    }\n\n    return (\n        <section class=\"vh-100 \">\n            <div class=\"mask d-flex align-items-center h-100 gradient-custom-3\">\n                <div class=\"container h-95\">\n                    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n                        <div class=\"col-12 col-md-9 col-lg-7 col-xl-6\">\n                            <div class=\"card  border rounded-lg border-info\" >\n                                <div class=\"card-body p-5 \">\n                                    <h2 class=\"text-center mb-5\">Update Product</h2>\n                                    <form>\n                                        <div class=\"form-outline mb-3\">\n                                            <label class=\"form-label\" >Enter Product Name</label>\n                                            <input type=\"text\" value={name} onChange={(e) => { setName(e.target.value) }} placeholder='Enter product name' class=\"form-control border border-info form-control-lg\" />\n                                        </div>\n                                        <div class=\"form-outline mb-3\">\n                                            <label class=\"form-label\">Enter Product Price</label>\n                                            <input type=\"text\" value={price} onChange={(e) => { setPrice(e.target.value) }} placeholder='Enter product price' class=\"form-control border border-info form-control-lg\" />\n                                        </div>\n                                        <div class=\"form-outline mb-3\">\n                                            <label class=\"form-label\" >Enter Product Category</label>\n                                            <input type=\"text\" value={category} onChange={(e) => { setCategory(e.target.value) }} placeholder='Enter product category' class=\"form-control border border-info form-control-lg\" />\n                                        </div>\n                                        <div class=\"form-outline mb-3\">\n                                            <label class=\"form-label\">Enter Product Company</label>\n                                            <input type=\"text\" value={company} onChange={(e) => { setCompany(e.target.value) }} placeholder='Enter product company' class=\"form-control border border-info form-control-lg\" />\n                                        </div>\n                                        <div class=\"d-flex justify-content-center\">\n\n                                            <Link onClick={updateProduct} to={\"/\"}>\n                                                <button type=\"button \" \n                                                    class=\"btn btn-success bg-info btn-block btn-lg gradient-custom-4 text-body\">Update Product</button>\n                                            </Link>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default UpdateProduct; ",{"ruleId":"63","severity":1,"message":"64","line":18,"column":25,"nodeType":"65","endLine":18,"endColumn":53},{"ruleId":"66","severity":1,"message":"67","line":80,"column":41,"nodeType":"65","endLine":81,"endColumn":69,"suppressions":"68"},{"ruleId":"66","severity":1,"message":"67","line":46,"column":41,"nodeType":"65","endLine":47,"endColumn":69,"suppressions":"69"},{"ruleId":"70","severity":1,"message":"71","line":14,"column":8,"nodeType":"72","endLine":14,"endColumn":10,"suggestions":"73"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["74"],["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProductDetails'. Either include it or remove the dependency array.","ArrayExpression",["76"],{"kind":"77","justification":"78"},{"kind":"77","justification":"78"},{"desc":"79","fix":"80"},"directive","","Update the dependencies array to be: [getProductDetails]",{"range":"81","text":"82"},[473,475],"[getProductDetails]"]